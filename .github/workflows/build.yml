name: CI Build and Test

on:
  push:
    branches: [ "main", "devops-project"]
  workflow_dispatch:

env:
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/doodledb"

jobs:
  build_server:
    name: Build Server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache Node modules (Server)
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-server-node-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-server-node-
      - name: Install dependencies
        run: cd server && npm ci
      - name: Lint
        run: cd server && npm run lint
      - name: Build
        run: cd server && npm run build --if-present

  build_client:
    name: Build Client
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Cache Node modules (Client)
        uses: actions/cache@v3
        with:
          path: client/node_modules
          key: ${{ runner.os }}-client-node-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-client-node-
      - name: Install dependencies
        run: cd client && npm ci
      - name: Build
        run: cd client && npm run build --if-present 

  test_server:
    name: Test Server
    runs-on: ubuntu-latest

    services: 
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: doodledb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install dependencies
        run: cd server && npm ci
      - name: Generate Prisma Client
        run: cd server && npx prisma generate
      - name: Run tests
        run: cd server && npm run test

  test_client:
    name: Test Client
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Install dependencies
        run: cd client && npm ci
      - name: Run tests
        run: cd client && npm run test