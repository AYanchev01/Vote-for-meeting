name: RELEASE

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push-client:
    name: Build client docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push client image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: false
          tags: ayanchev/doodle-client:${{ github.sha }}
          build-args: |
            REACT_APP_SERVER_URL=${{ secrets.SERVER_URL }}

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        continue-on-error: true # TO DO: fix the vulnerabilities
        with:
          image-ref: 'ayanchev/doodle-client:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      - name: Push Docker image
        if: success()
        run: docker push ayanchev/doodle-client:${{ github.sha }}

  build-and-push-server:
    name: Build server docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: false
          tags: ayanchev/doodle-server:${{ github.sha }}

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        continue-on-error: true # TO DO: fix the vulnerabilities
        with:
          image-ref: 'ayanchev/doodle-server:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'

      - name: Push Docker image
        if: success()
        run: docker push ayanchev/doodle-server:${{ github.sha }}

  create-cluster:
    needs: [build-and-push-server, build-and-push-client]
    runs-on: ubuntu-latest
    steps:
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0
        with:
          cluster_name: doodle-cluster

  deploy-application:
    needs: create-cluster
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          sudo apt-get update && sudo apt-get install -y kubectl

      - name: Apply ConfigMap and Secret
        run: |
          kubectl apply -f kubernetes/doodle-configmap.yaml
          kubectl apply -f kubernetes/doodle-secret.yaml

      - name: Deploy Client
        run: |
          export CLIENT_IMAGE=ayanchev/doodle-client:${{ github.sha }}
          envsubst < kubernetes/client-deployment.yaml | kubectl apply -f -
          kubectl apply -f kubernetes/client-service.yaml

      - name: Deploy Database
        run: |
          kubectl apply -f kubernetes/postgres-statefulset.yaml
          kubectl apply -f kubernetes/postgres-service.yaml

      - name: Deploy Server
        run: |
          export SERVER_IMAGE=ayanchev/doodle-server:${{ github.sha }}
          envsubst < kubernetes/server-deployment.yaml | kubectl apply -f -
          kubectl apply -f kubernetes/server-service.yaml

      - name: Forward Server Port
        run: |
          kubectl port-forward service/doodle-server 8080:80 &
          sleep 10

      - name: Test Server Application
        run: |
          curl --fail http://localhost:8080/health